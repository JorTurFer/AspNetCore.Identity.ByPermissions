@{
    Layout = "/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Access Manage";
}

<h2>@ViewData["Title"]</h2>

<div>
    <hr />
    <div class="row">
        <div class="col-md-3">
            <ul class="nav nav-pills nav-stacked">
                <li class="active" id="btnUsers">
                    <a onclick="GetUsers('@Url.Action("ManageUsers", "Permissions")')">Users</a>
                </li>
                <li class="null" id="btnRoles">
                    <a onclick="GetRoles('@Url.Action("ManageRoles", "Permissions")')">Permissions</a>
                </li>
            </ul>
        </div>
        <div class="col-md-9" id="content">
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        //Cargo la pagina de usuarios cuando acaba de cargar el DOM
        $(document).ready(GetUsers('@Url.Action("ManageUsers", "Permissions")'));

        function GetRoles(url) {
            $.ajax({
                url: url,
                data: { __RequestVerificationToken: $("input[name='__RequestVerificationToken']").val() },
                type: "post",
                success: function (data) {
                    $("#content").html(data);
                    $("#btnUsers").removeClass("active");
                    $("#btnRoles").addClass("active");
                },
                error: function () {
                    alert("Oops, we have a problem...");
                }
            });
        }
        function GetUsers(url) {
            $.ajax({
                url: url,
                data: { __RequestVerificationToken: $("input[name='__RequestVerificationToken']").val() },
                type: "post",
                success: function (data) {
                    $("#content").html(data);
                    $("#btnUsers").addClass("active");
                    $("#btnRoles").removeClass("active");
                },
                error: function () {
                    alert("Oops, we have a problem...");
                }
            });
        }
        function getUsersGrid(url, search, sort, ascending, page, pageSize) {
            $.ajax({
                url: url,
                data: {
                    __RequestVerificationToken: $("input[name='__RequestVerificationToken']").val(),
                    Text: search,
                    Sort: sort,
                    Ascending: ascending,
                    Page: page,
                    PageSize: pageSize
                },
                type: "post",
                success: function (data) {
                    $("#users").html(data);
                },
                error: function () {
                    alert("Oops, we have a problem...");
                }
            });
        }
        function getUserRoles(url, search, sort, ascending, page, pageSize, userId) {
            $.ajax({
                url: url,
                data: {
                    __RequestVerificationToken: $("input[name='__RequestVerificationToken']").val(),
                    Text: search,
                    Sort: sort,
                    Ascending: ascending,
                    Page: page,
                    PageSize: pageSize,
                    id: userId
                },
                type: "post",
                success: function (data) {
                    $("#users").html(data);
                },
                error: function () {
                    alert("Oops, we have a problem...");
                }
            });
        }
        function activateModalActions() {
            $("a[data-modal]").click(function () {
                var targetId = $(this).data("targetid");
                var modal = $(this).data("modal");
                $(modal).data("targetid", targetId)
                    .modal({ show: true, backdrop: "static" });
                return false;
            });

            $(".site-modal-remove").each(function (index, element) {
                var destinationUrl = $(element).data("url");
                $(".btn-primary", $(element)).click(function () {
                    var targetId = $(element).data("targetid");
                    $.post(destinationUrl, { id: targetId, __RequestVerificationToken: $("input[name='__RequestVerificationToken']").val() })
                        .done(function () { location.reload(); })
                        .fail(function () { alert("Oops, we had a problem..."); });
                });
            });
        }
        function saveNewRole(url, permissions) {
            if (!$("#roleName").val()) {
                alert("Needed a role name");
                return;
            }
            $.ajax({
                url: url,
                data: {
                    roleName: $("#roleName").val(),
                    __RequestVerificationToken: $("input[name='__RequestVerificationToken']").val()
                },
                type: "post",
                success: function (data) {
                    $("#listRolesUpd").append(new Option($("#roleName").val(), data, false, true));
                    $("#listRolesDel").append(new Option($("#roleName").val(), data, false, true));
                    getPermissions(permissions);
                },
                error: function () {
                    alert("Oops, we have a problem...");
                }
            });
        }
        function removeRole(url, claims) {
            if (!$("#listRolesDel").val()) {
                alert("You should select any role first");
                return;
            }
            $.ajax({
                url: url,
                data: {
                    roleId: $("#listRolesDel").val(),
                    __RequestVerificationToken: $("input[name='__RequestVerificationToken']").val()
                },
                type: "post",
                success: function (data) {
                    $(".desplegables option[value=" + $("#listRolesDel").val() + "]").remove();
                    getPermissions(claims);
                },
                error: function () {
                    alert("Oops, we have a problem...");
                }
            });
        }
        function getPermissions(url) {
            if (!$("#listRolesUpd").val()) {
                $("#permissions").html("");
                return;
            }
            $.ajax({
                url: url,
                data: {
                    roleId: $("#listRolesUpd").val(),
                    __RequestVerificationToken: $("input[name='__RequestVerificationToken']").val()
                },
                type: "post",
                success: function (data) {
                    $("#permissions").html(data);
                },
                error: function () {
                    alert("Oops, we have a problem...");
                }
            });
        }
        function updatePermissions(url, id) {
            $.ajax({
                url: url,
                data: {
                    roleId: $("#roleId").val(),
                    policyId: id,
                    set: $("#" + id).is(':checked'),
                    __RequestVerificationToken: $("input[name='__RequestVerificationToken']").val()
                },
                type: "post",
                //success: function (data) {

                //},
                error: function () {
                    $("#" + id).checked = !$("#" + id).is(':checked');
                    alert("Oops, we have a problem...");
                }
            });
        }
        function updateUserRole(url, userId, roleName) {
            $.ajax({
                url: url,
                data: {
                    id: userId,
                    roleName: roleName,
                    set: $("#" + roleName).is(':checked'),
                    __RequestVerificationToken: $("input[name='__RequestVerificationToken']").val()
                },
                type: "post",
                //success: function (data) {

                //},
                error: function () {
                    $("#" + roleName).checked = !$("#" + roleName).is(':checked');
                    alert("Oops, hemos tenido un problema...");
                }
            });
        }
    </script>
}